# -*- snakemake -*-
#
# Install with pip; use recent version of gcc (>=4.9)
#
from snakemakelib.config import update_snakemake_config
from snakemakelib.stat import is_installed

include: "../settings.rules"

ngs_cfg = config['bio.ngs.settings']

config_default = {
    'bio.ngs.enrichment.macs' : {
        'version2' : True,
        'macs' : {
            'cmd' : 'macs',
        },
        'macs2' : {
            'cmd' : 'macs2',
        },
        'callpeak' : {
            'options' : "",
        },
        'diffpeak' : {
            'options' : "",
        },
        'bdgpeakcall' : {
            'options' : "",
        },
        'bdgbroadcall' : {
            'options' : "",
        },
        'bdgcmp' : {
            'options' : "",
        },
        'bdgdiff' : {
            'options' : "",
        },
        'filterdup' : {
            'options' : "",
        },
        'predictd' : {
            'options' : "",
        },
        'pileup' : {
            'options' : "",
        },
        'randsample' : {
            'options' : "",
        },
        'refinepeak' : {
            'options' : "",
        },
    },
}

config = update_snakemake_config(config, config_default)

macs_cfg = config['bio.ngs.enrichment.macs']
python2 = config['comp.settings']['python2']['activate_cmd']

macs = 'macs2' if macs_cfg['version2'] else 'macs'

rule macs_callpeak_treatment_only_bam:
    """MACS callpeak on sample with no control."""
    params: cmd = macs_cfg[macs]['cmd'],
            options = macs_cfg['callpeak']['options']
    input: bam = "{prefix}.bam"
    output: xls = "{prefix}_peaks.xls"
            #bed = "{prefix}_peaks.bed",
            #summits = "{prefix}_summits.bed"
            #encodePeak = "{prefix}_peaks.encodePeak",
    log: "{prefix}." + macs + ".log"
    shell: python2 + " && {params.cmd} callpeak {params.options} -n {wildcards.prefix} -t {input.bam} -f BAM &> {log}"
