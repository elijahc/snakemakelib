# -*- snakemake -*-
import os
from snakemakelib.stat import is_installed
from snakemakelib.config import update_snakemake_config

include: '../settings.rules'

config_default = { 
    'bio.ngs.tools.bamtools' : {
        'ref' : config['bio.ngs.settings']['db']['ref'],
        'cmd' : "bamtools",
        'threads' : config['bio.ngs.settings']['threads'],
        'options' : "",
        'filter' : {
            'options' : '-mapQuality 255',
        },
    },
}

config = update_snakemake_config(config, config_default)

bamtools_cfg = config['bio.ngs.tools.bamtools']

if bamtools_cfg.get('cmd', "") and not is_installed(os.path.join(bamtools_cfg.get('cmd', ""))):
    raise Exception("\nbio.ngs.tools.bamtools: {prog} not installed or not in PATH\n".format(prog=bamtools_cfg.get('cmd')))

rule bamtools_filter:
    """Run bamtools filter on a bam file"""
    params: cmd = bamtools_cfg['cmd'],
            options = bamtools_cfg['filter']['options']
    input: "{prefix}.bam"
    output: "{prefix}_unique.bam"
    shell: "{params.cmd} filter -in {input} -out {output} {params.options}"
